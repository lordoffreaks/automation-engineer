swagger: "2.0"
info:
  title: Customers API
  version: 1.0.0
schemes:
  - "http"
paths:
  /customer:
    get:
      summary: "List customers"
      description: "Returns a list of customer"
      operationId: "getCustomers"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Customer"
  /customer/{customerId}:
    get:
      summary: "Find customer by ID"
      description: "Returns a single pet"
      operationId: "getCustomerById"
      produces:
        - "application/json"
      parameters:
        - name: "customerId"
          in: "path"
          description: "ID of customer to read"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Customer"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Pet not found"
    post:
      summary: "Add a new customer to the store"
      description: ""
      operationId: "addCustomer"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "customerId"
          in: "path"
          description: "ID of customer to read"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Pet object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Customer"
      responses:
        "405":
          description: "Invalid input"
    put:
      summary: "Update an existing Customer"
      description: ""
      operationId: "updateCustomer"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "customerId"
          in: "path"
          description: "ID of customer to read"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Pet object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Customer"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Customer not found"
        "405":
          description: "Validation exception"

definitions:
  Customer:
    type: "object"
    required:
      - "name"
      - "email"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "John doe"
      email:
        type: "string"
        example: "johndoe@bonhams.com"
